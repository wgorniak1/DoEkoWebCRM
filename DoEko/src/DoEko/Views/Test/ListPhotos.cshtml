@using DoEko.Models.DoEko.Survey
@using DoEko.Controllers.Extensions
@using Microsoft.AspNetCore.Identity
@using DoEko.Models.Identity
@model IList<DoEko.ViewModels.TestViewModels.ListPhotosViewModel>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Lista Zdjęć w ankietach";
}

<h2>Lista Zdjęć w ankietach</h2>

<div class="row thumbnail" style="background-color: #eaeaea;">
    <div class="col-sm-6">
        <div class="row"><div class="col-sm-12">Umowa</div></div>
        <div class="row"><div class="col-sm-12">Inwestycja</div></div>
        <div class="row"><div class="col-sm-12">Ankieta</div></div>
        <div class="row"><div class="col-sm-12">Inspektor</div></div>
    </div>
    <div class="col-sm-6">Zdjęcia</div>
</div>
@{  int i = 0;
    string background = ""; }

@foreach (var item in Model)
{
    i++;

    @if ((i % 2) == 0)
    { background = "background-color: #eaeaea;"; }
    else { background = "background-color: #ffffff;"; }
    <div class="row thumbnail" style="@background">
        <div class="col-sm-6">
            <div class="row">
                <div class="col-sm-2"><label class="control-label">Umowa:</label></div>
                <div class="col-sm-10">@item.Survey.Investment.Contract.ShortDescription</div>
            </div>
            <div class="row">
                <div class="col-sm-2"><label class="control-label">Inwestycja:</label></div>
                <div class="col-sm-10">@item.Survey.Investment.Address.SingleLine</div>
            </div>
            <div class="row">
                <div class="col-sm-2"><label class="control-label">Źródło:</label></div>
                <div class="col-sm-10">
                    
                        @item.Survey.Type.DisplayName() |
                        @switch (item.Survey.Type)
                        {
                            case DoEko.Models.DoEko.Survey.SurveyType.CentralHeating:
                                @(((SurveyCentralHeating)item.Survey).RSEType.DisplayName())
                                break;
                            case DoEko.Models.DoEko.Survey.SurveyType.HotWater:
                                @(((SurveyHotWater)item.Survey).RSEType.DisplayName())
                                break;
                            case DoEko.Models.DoEko.Survey.SurveyType.Energy:
                                @(((SurveyEnergy)item.Survey).RSEType.DisplayName())
                                break;
                            default:
                                break;
                        }
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2"><label class="control-label">Inspektor:</label></div>
                <div class="col-sm-10">
                    @if (item.Survey.Investment.InspectorId != Guid.Empty)
                    {
                        string inspector = "";
                        var uid = await UserManager.FindByIdAsync(item.Survey.Investment.InspectorId.ToString());

                        if (uid != null)
                        {
                            inspector = uid.LastName + " " + uid.FirstName;
                        }

                        <span>@inspector</span>
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            @switch (item.Survey.Type)
            {
                case DoEko.Models.DoEko.Survey.SurveyType.CentralHeating:

                    switch (((SurveyCentralHeating)item.Survey).RSEType)
                    {
                        case SurveyRSETypeCentralHeating.HeatPump:

                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture1" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture2" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture3" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                            break;
                        case SurveyRSETypeCentralHeating.PelletBoiler:
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture2" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                            break;
                        case SurveyRSETypeCentralHeating.HeatPumpAir:
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture2" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture4" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                            break;
                        default:
                            break;
                    }
                    break;
                case DoEko.Models.DoEko.Survey.SurveyType.HotWater:
                    switch (((SurveyHotWater)item.Survey).RSEType)
                    {
                        case SurveyRSETypeHotWater.Solar:
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture6" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture7" }, { "Item" , item } }'></partial>
                            break;
                        case SurveyRSETypeHotWater.HeatPump:
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture2" }, { "Item" , item } }'></partial>
                            <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                            break;
                        default:
                            break;
                    }
                    break;
                case DoEko.Models.DoEko.Survey.SurveyType.Energy:
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture0" }, { "Item" , item } }'></partial>
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture5" }, { "Item" , item } }'></partial>
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture6" }, { "Item" , item } }'></partial>
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture7" }, { "Item" , item } }'></partial>
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture8" }, { "Item" , item } }'></partial>
                    <partial name="_PicturePartial" view-data='new ViewDataDictionary(this.ViewData) { { "Id", "Picture9" }, { "Item" , item } }'></partial>
                    break;
                default:
                    break;
            }
        </div>
    </div>
}